import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç health endpoint"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Health Endpoint ===")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        print()
        return response.status_code == 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return False

def test_user_login():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ User Login ===")
    login_data = {
        "email": "user@test.com",
        "password": "testpassword"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/v1/auth/login",
            json=login_data,
            headers={"Content-Type": "application/json"}
        )
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        print()
        
        if response.status_code == 200:
            token_data = response.json()
            return token_data.get("token", {}).get("access_token")
        return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def test_admin_login():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Admin Login ===")
    login_data = {
        "email": "admin@test.com",
        "password": "adminpassword"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/v1/auth/admin/login",
            json=login_data,
            headers={"Content-Type": "application/json"}
        )
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        print()
        
        if response.status_code == 200:
            token_data = response.json()
            return token_data.get("token", {}).get("access_token")
        return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def test_user_profile(token):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not token:
        print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ User Profile: –ü–†–û–ü–£–©–ï–ù–û (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞) ===")
        return
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ User Profile ===")
    try:
        response = requests.get(
            f"{BASE_URL}/api/v1/user/profile",
            headers={"Authorization": f"Bearer {token}"}
        )
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        print()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def test_webhook():
    """–¢–µ—Å—Ç webhook endpoint"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Webhook ===")
    webhook_data = {
        "transaction_id": "test-transaction-001",
        "user_id": 1,
        "account_id": 1,
        "amount": 50.00,
        "signature": "test-signature"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/v1/webhook/payment",
            json=webhook_data,
            headers={"Content-Type": "application/json"}
        )
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        print()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Sanic Payment API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º health
    health_ok = test_health()
    
    if not health_ok:
        print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç—ã")
        exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    user_token = test_user_login()
    admin_token = test_admin_login()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_profile(user_token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook
    test_webhook()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
